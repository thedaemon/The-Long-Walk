[gd_scene load_steps=10 format=2]

[ext_resource path="res://Environment/Skies.png" type="Texture" id=1]
[ext_resource path="res://Environment/SkySphere.obj" type="ArrayMesh" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_front,diffuse_burley,specular_schlick_ggx,ambient_light_disabled;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	ALPHA = albedo.a * UV[1];
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/albedo = Color( 0.341176, 0.341176, 0.341176, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/metallic_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/roughness_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )

[sub_resource type="SpatialMaterial" id=3]
resource_name = "Default_OBJ"
albedo_color = Color( 0.8, 0.8, 0.8, 1 )
metallic = 0.5

[sub_resource type="ArrayMesh" id=4]
surfaces/0 = {
"aabb": AABB( -1, -1.21538, -1, 2.00001, 1.71538, 2 ),
"array_data": PoolByteArray( 0, 0, 128, 63, 0, 0, 0, 191, 0, 0, 0, 128, 132, 22, 3, 0, 252, 251, 130, 129, 0, 0, 0, 60, 0, 0, 128, 63, 0, 0, 0, 63, 0, 0, 0, 0, 129, 0, 0, 0, 0, 0, 129, 129, 0, 0, 0, 0, 208, 179, 93, 63, 0, 0, 0, 191, 0, 0, 0, 191, 150, 24, 65, 0, 191, 7, 148, 129, 85, 59, 0, 60, 208, 179, 93, 63, 0, 0, 0, 63, 0, 0, 0, 191, 147, 0, 63, 0, 193, 0, 147, 129, 85, 59, 0, 0, 208, 179, 93, 63, 0, 0, 0, 191, 0, 0, 0, 191, 150, 24, 65, 0, 67, 5, 107, 127, 85, 59, 0, 60, 208, 179, 93, 63, 0, 0, 0, 63, 0, 0, 0, 191, 147, 0, 63, 0, 63, 0, 109, 127, 85, 59, 0, 0, 0, 0, 0, 63, 0, 0, 0, 191, 208, 179, 93, 191, 193, 26, 106, 0, 109, 0, 65, 127, 170, 58, 0, 60, 0, 0, 0, 63, 0, 0, 0, 63, 208, 179, 93, 191, 193, 0, 109, 0, 109, 0, 63, 127, 170, 58, 0, 0, 0, 0, 0, 128, 0, 0, 0, 191, 0, 0, 128, 191, 0, 18, 125, 0, 126, 0, 0, 127, 0, 58, 0, 60, 0, 0, 0, 128, 0, 0, 0, 63, 0, 0, 128, 191, 0, 0, 127, 0, 126, 0, 0, 127, 0, 58, 0, 0, 0, 0, 0, 191, 0, 0, 0, 191, 208, 179, 93, 191, 62, 27, 107, 0, 109, 0, 193, 127, 85, 57, 0, 60, 0, 0, 0, 191, 0, 0, 0, 63, 208, 179, 93, 191, 63, 0, 109, 0, 109, 0, 193, 127, 85, 57, 0, 0, 208, 179, 93, 191, 0, 0, 0, 191, 0, 0, 0, 191, 107, 27, 61, 0, 63, 0, 146, 127, 170, 56, 0, 60, 208, 179, 93, 191, 0, 0, 0, 63, 0, 0, 0, 191, 109, 0, 63, 0, 63, 0, 147, 127, 170, 56, 0, 0, 0, 0, 128, 191, 0, 0, 0, 191, 0, 0, 0, 0, 123, 27, 0, 0, 0, 0, 130, 127, 0, 56, 0, 60, 0, 0, 128, 191, 0, 0, 0, 63, 0, 0, 0, 0, 127, 0, 0, 0, 0, 0, 129, 127, 0, 56, 0, 0, 208, 179, 93, 191, 0, 0, 0, 191, 0, 0, 0, 63, 107, 27, 194, 0, 193, 0, 147, 127, 170, 54, 0, 60, 208, 179, 93, 191, 0, 0, 0, 63, 0, 0, 0, 63, 109, 0, 193, 0, 193, 0, 147, 127, 170, 54, 0, 0, 0, 0, 0, 191, 0, 0, 0, 191, 208, 179, 93, 63, 65, 20, 150, 0, 148, 0, 190, 127, 85, 53, 0, 60, 0, 0, 0, 191, 0, 0, 0, 63, 208, 179, 93, 63, 63, 0, 147, 0, 147, 0, 193, 127, 85, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 128, 63, 0, 26, 132, 0, 130, 0, 0, 127, 0, 52, 0, 60, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 128, 63, 0, 0, 129, 0, 130, 0, 0, 127, 0, 52, 0, 0, 0, 0, 0, 63, 0, 0, 0, 191, 208, 179, 93, 63, 192, 24, 150, 0, 148, 0, 66, 127, 85, 49, 0, 60, 0, 0, 0, 63, 0, 0, 0, 63, 208, 179, 93, 63, 193, 0, 147, 0, 147, 0, 63, 127, 85, 49, 0, 0, 225, 179, 93, 63, 0, 0, 0, 191, 0, 0, 0, 63, 149, 25, 194, 0, 193, 0, 109, 127, 85, 45, 0, 60, 225, 179, 93, 63, 0, 0, 0, 63, 0, 0, 0, 63, 147, 0, 193, 0, 193, 0, 109, 127, 85, 45, 0, 0, 0, 0, 128, 63, 0, 0, 0, 191, 0, 0, 0, 128, 132, 22, 3, 0, 2, 250, 126, 127, 0, 0, 0, 60, 0, 0, 128, 63, 0, 0, 0, 63, 0, 0, 0, 0, 129, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 0, 207, 191, 189, 62, 155, 145, 155, 191, 95, 12, 33, 63, 197, 45, 154, 0, 127, 0, 0, 127, 85, 49, 0, 60, 206, 136, 34, 63, 155, 145, 155, 191, 206, 198, 186, 62, 154, 45, 197, 0, 127, 0, 0, 127, 85, 45, 0, 60, 0, 0, 0, 63, 0, 0, 0, 191, 208, 179, 93, 191, 193, 26, 106, 0, 127, 0, 0, 129, 170, 58, 0, 60, 206, 136, 34, 63, 155, 145, 155, 191, 91, 236, 182, 190, 154, 45, 59, 0, 127, 0, 0, 129, 85, 59, 0, 60, 207, 191, 189, 62, 155, 145, 155, 191, 21, 31, 31, 191, 197, 46, 101, 0, 127, 0, 0, 129, 170, 58, 0, 60, 26, 195, 28, 60, 155, 145, 155, 191, 66, 208, 57, 63, 0, 46, 138, 0, 127, 0, 0, 127, 0, 52, 0, 60, 178, 76, 59, 63, 155, 145, 155, 191, 170, 156, 118, 59, 138, 44, 255, 0, 127, 0, 0, 127, 0, 0, 0, 60, 124, 243, 179, 190, 155, 145, 155, 191, 95, 12, 33, 63, 59, 46, 155, 0, 127, 0, 0, 127, 85, 53, 0, 60, 165, 162, 29, 191, 155, 145, 155, 191, 239, 198, 186, 62, 101, 47, 197, 0, 127, 0, 0, 127, 170, 54, 0, 60, 136, 102, 54, 191, 155, 145, 155, 191, 170, 156, 118, 59, 117, 48, 0, 0, 127, 0, 0, 127, 0, 56, 0, 60, 165, 162, 29, 191, 155, 145, 155, 191, 91, 236, 182, 190, 101, 48, 58, 0, 127, 0, 0, 129, 170, 56, 0, 60, 124, 243, 179, 190, 155, 145, 155, 191, 21, 31, 31, 191, 58, 48, 101, 0, 127, 0, 0, 129, 85, 57, 0, 60, 26, 195, 28, 60, 155, 145, 155, 191, 248, 226, 55, 191, 255, 46, 118, 0, 127, 0, 0, 129, 0, 58, 0, 60, 225, 179, 93, 63, 0, 0, 0, 191, 0, 0, 0, 63, 149, 25, 194, 0, 127, 0, 0, 127, 85, 45, 0, 60 ),
"array_index_data": PoolByteArray( 0, 0, 1, 0, 2, 0, 2, 0, 1, 0, 3, 0, 4, 0, 5, 0, 6, 0, 6, 0, 5, 0, 7, 0, 6, 0, 7, 0, 8, 0, 8, 0, 7, 0, 9, 0, 8, 0, 9, 0, 10, 0, 10, 0, 9, 0, 11, 0, 10, 0, 11, 0, 12, 0, 12, 0, 11, 0, 13, 0, 12, 0, 13, 0, 14, 0, 14, 0, 13, 0, 15, 0, 14, 0, 15, 0, 16, 0, 16, 0, 15, 0, 17, 0, 16, 0, 17, 0, 18, 0, 18, 0, 17, 0, 19, 0, 18, 0, 19, 0, 20, 0, 20, 0, 19, 0, 21, 0, 20, 0, 21, 0, 22, 0, 22, 0, 21, 0, 23, 0, 22, 0, 23, 0, 24, 0, 24, 0, 23, 0, 25, 0, 24, 0, 25, 0, 26, 0, 26, 0, 25, 0, 27, 0, 22, 0, 24, 0, 28, 0, 28, 0, 24, 0, 29, 0, 2, 0, 30, 0, 31, 0, 31, 0, 6, 0, 32, 0, 20, 0, 22, 0, 33, 0, 33, 0, 22, 0, 28, 0, 0, 0, 2, 0, 34, 0, 34, 0, 2, 0, 31, 0, 18, 0, 20, 0, 35, 0, 35, 0, 20, 0, 33, 0, 16, 0, 18, 0, 36, 0, 36, 0, 18, 0, 35, 0, 14, 0, 16, 0, 37, 0, 37, 0, 16, 0, 36, 0, 12, 0, 14, 0, 38, 0, 38, 0, 14, 0, 37, 0, 10, 0, 12, 0, 39, 0, 39, 0, 12, 0, 38, 0, 8, 0, 10, 0, 40, 0, 40, 0, 10, 0, 39, 0, 41, 0, 0, 0, 29, 0, 29, 0, 0, 0, 34, 0, 6, 0, 8, 0, 32, 0, 32, 0, 8, 0, 40, 0 ),
"blend_shape_data": [  ],
"format": 97559,
"index_count": 144,
"material": SubResource( 3 ),
"name": "Default_OBJ",
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 42
}

[sub_resource type="Shader" id=5]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx,unshaded,shadows_disabled,ambient_light_disabled;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


uniform float slice;



void vertex() {
	//UV=UV*uv1_scale.xy+uv1_offset.xy;
	UV=vec2(UV.x + (mod(slice * 0.5,1)), UV.y + (mod(slice * (1.0 / 12.0),12.0)));
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/metallic_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/roughness_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/slice = 2.0
shader_param/texture_albedo = ExtResource( 1 )

[sub_resource type="Animation" id=7]
length = 13.0
loop = true
step = 1.0
tracks/0/type = "value"
tracks/0/path = NodePath("SkySphere:material_override:shader_param/slice")
tracks/0/interp = 0
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 24.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sun:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Vector3( -2.96, -0.9, 0 ), Vector3( -6.02, -0.9, 0 ), Vector3( -9.14, -0.9, 0 ), Vector3( -13.4, -0.9, 0 ), Vector3( -16.48, -0.9, 0 ), Vector3( -24.36, -0.9, 0 ), Vector3( -40.34, -0.9, 0 ), Vector3( -26.3, 156.46, 0 ), Vector3( -11.92, 163.4, 0 ), Vector3( -6.36, 163.74, 0 ), Vector3( -3.3, 160.22, 0 ), Vector3( 0.002, 160, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sun:light_color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1, 2, 3, 4, 5, 6, 7, 10.995, 11, 12 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Color( 0.505882, 0.411765, 0.286275, 1 ), Color( 0.509804, 0.447059, 0.360784, 1 ), Color( 0.603922, 0.545098, 0.466667, 1 ), Color( 0.811765, 0.733333, 0.623529, 1 ), Color( 0.654902, 0.623529, 0.576471, 1 ), Color( 0.811765, 0.733333, 0.623529, 1 ), Color( 0.921569, 0.811765, 0.658824, 1 ), Color( 0.721569, 0.658824, 0.568627, 1 ), Color( 0.956863, 0.760784, 0.54902, 1 ), Color( 1, 0.733333, 0.352941, 1 ), Color( 0, 0, 0, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("SkySphere:material_override:shader_param/albedo")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 11, 12 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 0.270588, 0.654902, 0.760784, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("FogCylinder:translation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 6, 7, 8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ Vector3( 0, 0.03, 0 ), Vector3( 0, 0.15, 0 ), Vector3( 0, 0.032, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("FogCylinder:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 6, 7, 8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ Vector3( 0.233, 0.08, 0.233 ), Vector3( 0.233, 0.21, 0.233 ), Vector3( 0.233, 0.08, 0.233 ) ]
}

[node name="Environment" type="Spatial"]
transform = Transform( 3000.01, 0, 0, 0, 3000, 0, 0, 0, 3000.01, 0, 0, 0 )

[node name="FogCylinder" type="MeshInstance" parent="."]
transform = Transform( 0.00642443, 0, 0.232911, 0, 0.08, 0, -0.232911, 0, 0.00642443, 0, 0.032, 0 )
visible = false
material_override = SubResource( 2 )
cast_shadow = 0
mesh = SubResource( 4 )
material/0 = null

[node name="SkySphere" type="MeshInstance" parent="."]
material_override = SubResource( 6 )
cast_shadow = 0
mesh = ExtResource( 2 )
material/0 = null

[node name="Sun" type="DirectionalLight" parent="."]
transform = Transform( 0.000333292, 8.31693e-07, -5.1693e-06, 0, 0.000329103, 5.29492e-05, 5.23578e-06, -5.29429e-05, 0.000329061, 0, 0, 0 )
light_color = Color( 0.603922, 0.545098, 0.466667, 1 )
light_energy = 2.26
light_indirect_energy = 6.8
light_specular = 0.0
light_bake_mode = 0
shadow_enabled = true
directional_shadow_mode = 0
directional_shadow_split_1 = 0.05
directional_shadow_split_3 = 0.424
directional_shadow_normal_bias = 16.0
directional_shadow_bias_split_scale = 0.04
directional_shadow_max_distance = 428.4

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "TimeOfDay"
playback_speed = 0.01
method_call_mode = 1
anims/TimeOfDay = SubResource( 7 )
